name: AI Tests - Secrets & Security

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - customer-support
          - code-generation
          - summarization
      model:
        description: 'AI model to use'
        required: false
        default: 'gpt-3.5-turbo'
        type: choice
        options:
          - gpt-3.5-turbo
          - gpt-4
          - claude-3-haiku
          - claude-3-sonnet

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  security-check:
    name: 🔒 Security Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npm audit --audit-level moderate
      - run: npm run security:check

  ai-tests-secure:
    name: 🤖 AI Tests (Secure)
    runs-on: ubuntu-latest
    needs: [security-check]
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch'
    
    # Environment-specific configuration
    env:
      NODE_ENV: production
      GLASSBOX_LOG_LEVEL: info
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Minimal history for security
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --only=production
        
      - name: Validate secrets
        run: |
          # Check if required secrets are available
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ] && [ -z "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            echo "❌ No AI API keys configured"
            echo "Please add OPENAI_API_KEY or ANTHROPIC_API_KEY to repository secrets"
            exit 1
          fi
          
          # Validate API key format (basic check)
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            if [[ ! "${{ secrets.OPENAI_API_KEY }}" =~ ^sk-[a-zA-Z0-9]{32,}$ ]]; then
              echo "⚠️ OpenAI API key format appears invalid"
            else
              echo "✅ OpenAI API key format looks valid"
            fi
          fi
          
          if [ -n "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            if [[ ! "${{ secrets.ANTHROPIC_API_KEY }}" =~ ^sk-ant-[a-zA-Z0-9]{32,}$ ]]; then
              echo "⚠️ Anthropic API key format appears invalid"
            else
              echo "✅ Anthropic API key format looks valid"
            fi
          fi
          
      - name: Run AI Tests with security
        id: glassbox-tests
        uses: ./.github/actions/glassbox-test
        with:
          test-directory: '.glassbox/tests/'
          model: ${{ github.event.inputs.model || 'gpt-3.5-turbo' }}
          output-format: 'json'
          timeout: '45000'
          concurrency: '2'  # Lower concurrency for security
          retry: '1'  # Fewer retries to limit API calls
          budget: '0.25'  # Lower budget for security
          fail-on-errors: 'false'
          comment-on-pr: 'true'
          verbose: 'false'
        env:
          # Use conditional secrets
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' && secrets.OPENAI_API_KEY || '' }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY != '' && secrets.ANTHROPIC_API_KEY || '' }}
          # Additional security environment variables
          GLASSBOX_DISABLE_LOGGING: 'true'
          GLASSBOX_MASK_SENSITIVE: 'true'
          
      - name: Security audit of test results
        if: always()
        run: |
          # Check for sensitive data in test results
          if [ -f test-results/output.json ]; then
            echo "🔍 Scanning test results for sensitive data..."
            
            # Check for API keys in output
            if grep -q "sk-" test-results/output.json; then
              echo "❌ API keys found in test results - removing"
              sed -i 's/sk-[a-zA-Z0-9]\{32,\}/***REDACTED***/g' test-results/output.json
            fi
            
            # Check for email addresses
            if grep -q "[a-zA-Z0-9._%+-]\+@[a-zA-Z0-9.-]\+\.[a-zA-Z]\{2,\}" test-results/output.json; then
              echo "⚠️ Email addresses found in test results"
            fi
            
            # Check for phone numbers
            if grep -q "[0-9]\{3\}-[0-9]\{3\}-[0-9]\{4\}" test-results/output.json; then
              echo "⚠️ Phone numbers found in test results"
            fi
            
            echo "✅ Security audit completed"
          fi
          
      - name: Upload secure artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ai-test-results-secure-${{ github.run_number }}
          path: test-results/
          retention-days: 7  # Shorter retention for security
          
      - name: Clean up sensitive data
        if: always()
        run: |
          # Remove any temporary files that might contain sensitive data
          rm -rf test-results/temp-*
          rm -rf .glassbox/cache/*
          echo "🧹 Cleanup completed"
          
      - name: Security summary
        if: always()
        run: |
          echo "## 🔒 Security Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **API Keys**: ${{ secrets.OPENAI_API_KEY != '' && 'OpenAI' || '' }}${{ secrets.ANTHROPIC_API_KEY != '' && 'Anthropic' || '' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Results**: ${{ steps.glassbox-tests.outputs.total }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Success Rate**: ${{ steps.glassbox-tests.outputs.success-rate }}%" >> $GITHUB_STEP_SUMMARY
          echo "- **Cost**: ${{ steps.glassbox-tests.outputs.total-cost }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security**: ✅ Passed" >> $GITHUB_STEP_SUMMARY 